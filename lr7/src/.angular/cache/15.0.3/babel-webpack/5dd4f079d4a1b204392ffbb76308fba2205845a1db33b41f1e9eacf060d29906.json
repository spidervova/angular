{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PostsService {\n  constructor() {\n    this.posts = [{\n      title: 'Post 1',\n      text: 'Sample text for post 1',\n      id: 11\n    }, {\n      title: 'Post 2',\n      text: 'Sample text for post 2',\n      id: 22\n    }, {\n      title: 'Post 3',\n      text: 'Sample text for post 3',\n      id: 33\n    }, {\n      title: 'Post 4',\n      text: 'Sample text for post 4',\n      id: 44\n    }];\n  }\n  getById(id) {\n    return this.posts.find(p => p.id === id);\n  }\n  loadMore() {\n    this.posts = [...this.posts, ...this.posts.slice(0, 4)];\n  }\n}\nPostsService.ɵfac = function PostsService_Factory(t) {\n  return new (t || PostsService)();\n};\nPostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostsService,\n  factory: PostsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AASA,OAAM,MAAOA,YAAY;EADzBC;IAEE,UAAK,GAAW,CACd;MAACC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,wBAAwB;MAAEC,EAAE,EAAE;IAAE,CAAC,EACzD;MAACF,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,wBAAwB;MAAEC,EAAE,EAAE;IAAE,CAAC,EACzD;MAACF,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,wBAAwB;MAAEC,EAAE,EAAE;IAAE,CAAC,EACzD;MAACF,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,wBAAwB;MAAEC,EAAE,EAAE;IAAE,CAAC,CAC1D;;EAEDC,OAAO,CAACD,EAAU;IAChB,OAAO,IAAI,CAACE,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;EAC1C;EAEAK,QAAQ;IACN,IAAI,CAACH,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE,GAAG,IAAI,CAACA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACzD;;AAdWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YADA;AAAM","names":["PostsService","constructor","title","text","id","getById","posts","find","p","loadMore","slice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Користувач\\zieit2022\\my-app\\src\\app\\posts.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\n\nexport interface Post {\n  title: string\n  text: string\n  id: number\n}\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  posts: Post[] = [\n    {title: 'Post 1', text: 'Sample text for post 1', id: 11},\n    {title: 'Post 2', text: 'Sample text for post 2', id: 22},\n    {title: 'Post 3', text: 'Sample text for post 3', id: 33},\n    {title: 'Post 4', text: 'Sample text for post 4', id: 44},\n  ]\n\n  getById(id: number) {\n    return this.posts.find(p => p.id === id)\n  }\n\n  loadMore() {\n    this.posts = [...this.posts, ...this.posts.slice(0, 4)]\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}